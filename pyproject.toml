[build-system]
requires = ["hatchling>=1.25"]
build-backend = "hatchling.build"

[project]
name = "evals"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "ipykernel>=6.30.1",
    "langchain-openai>=0.3.30",
    "ragas>=0.3.2",
    "sacrebleu>=2.5.1",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Set line length to 88 (PEP 8 recommendation)
line-length = 88

# Target Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable all Pycodestyle (`E`), Pyflakes (`F`), isort (`I`) codes
# Add more PEP 8 related rules
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "C90", # mccabe complexity
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "COM", # flake8-commas (except COM812)
    "C4",  # flake8-comprehensions
    "Q",   # flake8-quotes
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "S",   # flake8-bandit (security)
    "RUF", # ruff-specific rules
]

# Ignore rules that conflict with the formatter
ignore = [
    "COM812",
    "E501",
    "D100",
    "D104",
    "D107",
    "D203",
    "D213",
    "RUF001",
    "RUF003",
    "RUF012",
]

# Allow autofix for all enabled and fixable rules
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Allow unused imports in __init__.py files
"tests/**" = ["D"]       # Relax docstring rules in tests

[tool.ruff.lint.isort]
# Configure isort rules for import organization
known-first-party = ["src"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]
combine-as-imports = true
split-on-trailing-comma = true
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Indent with 4 spaces
indent-style = "space"
line-ending = "auto"
# Enable formatting long strings
docstring-code-format = true
# Always add trailing commas in multi-line comma-separated structures
skip-magic-trailing-comma = false

[dependency-groups]
dev = ["ruff>=0.12.7", "yamllint>=1.37.1"]

[tool.ruff.lint.mccabe]
# Set the maximum complexity to 10
max-complexity = 10

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = ["src"]
